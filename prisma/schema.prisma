// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//connect using psql in powershell 
//psql -U postgres -d NextWebApp -h localhost -p 5432
//or 
// psql "postgresql://postgres:byronodmon@localhost:5432/NextWebApp"

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// @id make id the primary key
model User {
  @@map("users")
  id          String        @id @default(uuid())
  username    String        @db.VarChar(255)
  email       String        @db.VarChar(255)
  password    String        @db.VarChar(255)
  createdAt   DateTime      @default(now())
  orders      Order[]    
}

model Order {
  @@map("orders")
  id                  String        @id @default(uuid())
  pricePaidInCents    Int
  userId              String
  productId           String
  user                User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  product             Product       @relation(fields: [productId], references: [id], onDelete: Restrict)
  discountCodeId      String      
  discountCode        DiscountCode  @relation(fields: [discountCodeId], references: [id], onDelete: Restrict)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
}

model DownloadVerification {
  @@map("download_verification")
  id          String      @id @default(uuid())
  productId   String
  product     Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  expiresAt   DateTime
  createdAt   DateTime    @default(now())
}

model Product {
  @@map("products")
  id                    String                  @id @default(uuid())
  name                  String          
  priceinCents          Int            
  filePath              String
  imagePath             String
  description           String
  canPurchase           Boolean                 @default(true)
  orders                Order[]
  downloadVerification  DownloadVerification[]
  discountCodes         DiscountCode[]
  createdAt   DateTime                          @default(now())
  updatedAt   DateTime                          @updatedAt
}

model DiscountCode {
  @@map("discount_codes")
  id              String                @id @default(uuid())
  code            String                @unique
  discountAmount  DiscountCodeType
  uses            Int                   @default(0)
  isAcvtive       Boolean               @default(true)
  allProducts     Boolean               @default(false)
  limit           Int? 
  expiresAt       DateTime?
  createdAt       DateTime?             @default(now())
  products        Product[]
  orders          Order[]
}


enum DiscountCodeType {
  PERCENTAGE
  FIXED
}